create or replace
FUNCTION	            FUNC_STATISTICS_INSERT (







    IV_BOSEQ    IN    VARCHAR2    -- 지국번호
    ,IV_YYMM    IN    VARCHAR2    -- 마감기준월-1
)
    RETURN  VARCHAR2 IS
/*=================================================================================================
-- SF명     : FUNC_STATISTICS_INSERT
-- 기능명   : 마감 통계 등록
-- 작성일자 : 2011/12/02
-- 작성자   : 박경주

=================================================================================================*/
    MSG      VARCHAR2(255)     :=   '';     -- 결과 메시지
    RESULT_COUNT	INTEGER;

    CURSOR STATISTICS(P_BOSEQ VARCHAR2, P_YYMM VARCHAR2) IS
		SELECT
		    C.BOSEQ
		    , C.NEWSCD
		    , C.GNO
			, (SELECT NVL(SUM(QTY),0) FROM TM_READER_NEWS WHERE BNO!='999' AND READTYPECD = '011' AND SGBGMM <= TO_CHAR(ADD_MONTHS(TO_DATE(P_YYMM,'YYYYMM'), -1) , 'YYYYMM') AND GNO = C.GNO AND BOSEQ = P_BOSEQ ) AS READTYPECD011							-- 일반 
			, (SELECT NVL(SUM(QTY),0) FROM TM_READER_NEWS WHERE BNO!='999' AND READTYPECD = '012' AND GNO = C.GNO AND BOSEQ = P_BOSEQ ) AS READTYPECD012														-- 학생 (지국) 
			, (SELECT NVL(SUM(QTY),0) FROM TM_READER_NEWS WHERE BNO!='999' AND READTYPECD = '013' AND GNO = C.GNO AND BOSEQ = P_BOSEQ ) AS READTYPECD013														-- 학생 (본사) 
			, (SELECT NVL(SUM(QTY),0) FROM TM_READER_NEWS WHERE BNO!='999' AND READTYPECD = '014' AND GNO = C.GNO AND BOSEQ = P_BOSEQ ) AS READTYPECD014														-- 병독 
			, (SELECT NVL(SUM(QTY),0) FROM TM_READER_NEWS WHERE BNO!='999' AND READTYPECD = '015' AND GNO = C.GNO AND BOSEQ = P_BOSEQ ) AS READTYPECD015														-- 교육 
			, (SELECT NVL(SUM(QTY),0) FROM TM_READER_NEWS WHERE BNO!='999' AND READTYPECD = '016' AND GNO = C.GNO AND BOSEQ = P_BOSEQ ) AS READTYPECD016														-- 본사직원 
			, (SELECT NVL(SUM(QTY),0) FROM TM_READER_NEWS WHERE BNO!='999' AND READTYPECD = '021' AND GNO = C.GNO AND BOSEQ = P_BOSEQ ) AS READTYPECD021														-- 기증 
			, (SELECT NVL(SUM(QTY),0) FROM TM_READER_NEWS WHERE BNO!='999' AND READTYPECD = '022' AND GNO = C.GNO AND BOSEQ = P_BOSEQ ) AS READTYPECD022														-- 홍보 
			, (SELECT NVL(SUM(QTY),0) FROM TM_READER_NEWS WHERE BNO!='999' AND READTYPECD = '011' AND SGBGMM = P_YYMM AND GNO = C.GNO AND BOSEQ = P_BOSEQ ) AS SUM_QTY1														-- 준유가(1개월) 
			, (SELECT NVL(SUM(QTY),0) FROM TM_READER_NEWS WHERE BNO!='999' AND READTYPECD = '011' AND SGBGMM = TO_CHAR(ADD_MONTHS(TO_DATE(P_YYMM,'YYYYMM'), 1) , 'YYYYMM') AND GNO = C.GNO AND BOSEQ = P_BOSEQ ) AS SUM_QTY2														-- 준유가(2개월) 
			, (SELECT NVL(SUM(QTY),0) FROM TM_READER_NEWS WHERE BNO!='999' AND READTYPECD = '011' AND SGBGMM = TO_CHAR(ADD_MONTHS(TO_DATE(P_YYMM,'YYYYMM'), 2) , 'YYYYMM') AND GNO = C.GNO AND BOSEQ = P_BOSEQ ) AS SUM_QTY3														-- 준유가(3개월) 
			, (SELECT NVL(SUM(QTY),0) FROM TM_READER_NEWS WHERE BNO!='999' AND READTYPECD = '011' AND SGBGMM = TO_CHAR(ADD_MONTHS(TO_DATE(P_YYMM,'YYYYMM'), 3) , 'YYYYMM') AND GNO = C.GNO AND BOSEQ = P_BOSEQ ) AS SUM_QTY4														-- 준유가(4개월) 
			, (SELECT NVL(SUM(QTY),0) FROM TM_READER_NEWS WHERE BNO!='999' AND READTYPECD = '011' AND SGBGMM = TO_CHAR(ADD_MONTHS(TO_DATE(P_YYMM,'YYYYMM'), 4) , 'YYYYMM') AND GNO = C.GNO AND BOSEQ = P_BOSEQ ) AS SUM_QTY5														-- 준유가(5개월) 
			, (SELECT NVL(SUM(QTY),0) FROM TM_READER_NEWS WHERE BNO!='999' AND READTYPECD = '011' AND SGBGMM = TO_CHAR(ADD_MONTHS(TO_DATE(P_YYMM,'YYYYMM'), 5) , 'YYYYMM') AND GNO = C.GNO AND BOSEQ = P_BOSEQ ) AS SUM_QTY6														-- 준유가(6개월) 
			, (SELECT NVL(SUM(QTY),0) FROM TM_READER_NEWS WHERE BNO!='999' AND READTYPECD = '011' AND SGBGMM >= TO_CHAR(ADD_MONTHS(TO_DATE(P_YYMM,'YYYYMM'), 6) , 'YYYYMM') AND GNO = C.GNO AND BOSEQ = P_BOSEQ ) AS SUM_QTY7													-- 기타 
			, (SELECT NVL(SUM(QTY),0) FROM TM_READER_NEWS WHERE BNO!='999' AND SGTYPE = '031' AND GNO = C.GNO AND BOSEQ = P_BOSEQ ) AS SUM_ETC_LOSS																						-- 결손 부수 
			, (SELECT NVL(SUM(QTY),0) FROM TM_READER_NEWS WHERE BNO!='999' AND SGTYPE = '032' AND GNO = C.GNO AND BOSEQ = P_BOSEQ ) AS SUM_ETC_FINANCE																					-- 재무 부수 
			, (SELECT NVL(SUM(QTY),0) FROM TM_READER_NEWS WHERE BNO!='999' AND SGTYPE = '033' AND GNO = C.GNO AND BOSEQ = P_BOSEQ ) AS SUM_ETC_LEAVE																						-- 휴독 부수 
			, (SELECT NVL(SUM(QTY),0) FROM TM_READER_NEWS WHERE BNO!='999' AND READTYPECD = '011' AND SGBGMM <= TO_CHAR(ADD_MONTHS(TO_DATE(P_YYMM,'YYYYMM'), -1) , 'YYYYMM') AND NVL(UPRICE/DECODE(QTY,0,NULL,QTY),0) = '15000' AND GNO = C.GNO AND BOSEQ = P_BOSEQ ) AS SUM_LIST_PRICE					-- 일반독자중 구독료가 정가인 독자 
			, NVL(SUM(CASE WHEN C.SGBBCD = '044' AND C.YYMM = TO_CHAR(ADD_MONTHS(TO_DATE(TO_CHAR(ADD_MONTHS(TO_DATE(P_YYMM,'YYYYMM'), -1) , 'YYYYMM'),'YYYYMM'), -1) , 'YYYYMM') THEN C.BILLAMT END),0) AS SUM_MISU_AMT									-- 매출액중 미수된 금액 (전월미수)
			, NVL(SUM(CASE WHEN C.SGBBCD = '044' AND C.YYMM < TO_CHAR(ADD_MONTHS(TO_DATE(P_YYMM,'YYYYMM'), -1) , 'YYYYMM') THEN C.BILLAMT END),0) AS SUM_ALL_MISU_AMT																				-- 매출액중 미수된 금액 (총 전월미수)
			, NVL(SUM(CASE WHEN C.YYMM < TO_CHAR(ADD_MONTHS(TO_DATE(P_YYMM,'YYYYMM'), -1) , 'YYYYMM') AND C.SGYYMM >= TO_CHAR(ADD_MONTHS(TO_DATE(P_YYMM,'YYYYMM'), -1) , 'YYYYMM') AND C.SGBBCD != '044' THEN C.BILLAMT END),0) AS SUM_MISU_AFTER														-- 현재월 이후에 입금된 미수 
			, NVL(SUM(CASE WHEN C.YYMM = TO_CHAR(ADD_MONTHS(TO_DATE(P_YYMM,'YYYYMM'), -1) , 'YYYYMM') THEN C.BILLAMT END),0) AS MONTH_SUGUM																												-- 당월수금예정액 
			, NVL(SUM(CASE WHEN C.CLDT BETWEEN TO_CHAR(ADD_MONTHS(TO_DATE(P_YYMM,'YYYYMM'), -1) , 'YYYYMM') || '20' AND TO_CHAR(TO_DATE(P_YYMM,'YYYYMM') , 'YYYYMM') || '21' AND C.YYMM = TO_CHAR(ADD_MONTHS(TO_DATE(P_YYMM,'YYYYMM'), -1) , 'YYYYMM') AND C.SGBBCD IN ('011','012','013','014','021','022','023','024','044') THEN C.AMT END),0) AS SUM_YUGA_SINSU					-- 유가조정액 중 신수 
			, NVL(SUM(CASE WHEN C.CLDT BETWEEN TO_CHAR(ADD_MONTHS(TO_DATE(P_YYMM,'YYYYMM'), -1) , 'YYYYMM') || '20' AND TO_CHAR(TO_DATE(P_YYMM,'YYYYMM') , 'YYYYMM') || '21' AND C.YYMM < TO_CHAR(ADD_MONTHS(TO_DATE(P_YYMM,'YYYYMM'), -1) , 'YYYYMM') AND C.SGBBCD IN ('011','012','013','014','021','022','023','024','044') THEN C.AMT END),0) AS SUM_YUGA_MISU					-- 유가조정액 중 미수 
			, NVL(SUM(CASE WHEN C.CLDT BETWEEN TO_CHAR(ADD_MONTHS(TO_DATE(P_YYMM,'YYYYMM'), -1) , 'YYYYMM') || '20' AND TO_CHAR(TO_DATE(P_YYMM,'YYYYMM') , 'YYYYMM') || '21' AND C.SGBBCD IN ('031','032','033') THEN C.AMT END),0) + NVL(SUM(CASE WHEN C.CLDT BETWEEN TO_CHAR(ADD_MONTHS(TO_DATE(P_YYMM,'YYYYMM'), -1) , 'YYYYMM') || '20' AND TO_CHAR(TO_DATE(P_YYMM,'YYYYMM') , 'YYYYMM') || '21' THEN C.LOSSAMT END),0) AS SUM_ETC1				-- 재무,결손,휴독 금액 
			, NVL(SUM(CASE WHEN C.CLDT BETWEEN TO_CHAR(ADD_MONTHS(TO_DATE(P_YYMM,'YYYYMM'), -1) , 'YYYYMM') || '20' AND TO_CHAR(TO_DATE(P_YYMM,'YYYYMM') , 'YYYYMM') || '21' AND TO_CHAR(ADD_MONTHS(TO_DATE(P_YYMM,'YYYYMM'), -1) , 'YYYYMM') < C.YYMM AND C.SGBBCD IN ('011','012','013','014','021','022','023','024','044') THEN C.AMT END),0) AS SUM_DEPOSIT					-- 선입금 
			, NVL(SUM(CASE WHEN C.CLDT BETWEEN TO_CHAR(ADD_MONTHS(TO_DATE(P_YYMM,'YYYYMM'), -1) , 'YYYYMM') || '20' AND TO_CHAR(TO_DATE(P_YYMM,'YYYYMM') , 'YYYYMM') || '21' AND C.SGBBCD = '011' THEN C.AMT END),0) AS SUM_SGBBCD011  																						-- 지로 
			, NVL(SUM(CASE WHEN C.CLDT BETWEEN TO_CHAR(ADD_MONTHS(TO_DATE(P_YYMM,'YYYYMM'), -1) , 'YYYYMM') || '20' AND TO_CHAR(TO_DATE(P_YYMM,'YYYYMM') , 'YYYYMM') || '21' AND C.SGBBCD = '012' THEN C.AMT END),0) AS SUM_SGBBCD012  																						-- 방문 
			, NVL(SUM(CASE WHEN C.CLDT BETWEEN TO_CHAR(ADD_MONTHS(TO_DATE(P_YYMM,'YYYYMM'), -1) , 'YYYYMM') || '20' AND TO_CHAR(TO_DATE(P_YYMM,'YYYYMM') , 'YYYYMM') || '21' AND C.SGBBCD = '013' THEN C.AMT END),0) AS SUM_SGBBCD013  																						-- 통장입금 
			, NVL(SUM(CASE WHEN C.CLDT BETWEEN TO_CHAR(ADD_MONTHS(TO_DATE(P_YYMM,'YYYYMM'), -1) , 'YYYYMM') || '20' AND TO_CHAR(TO_DATE(P_YYMM,'YYYYMM') , 'YYYYMM') || '21' AND C.SGBBCD = '021' THEN C.AMT END),0) AS SUM_SGBBCD021  																						-- 자동이체 
			, NVL(SUM(CASE WHEN C.CLDT BETWEEN TO_CHAR(ADD_MONTHS(TO_DATE(P_YYMM,'YYYYMM'), -1) , 'YYYYMM') || '20' AND TO_CHAR(TO_DATE(P_YYMM,'YYYYMM') , 'YYYYMM') || '21' AND C.SGBBCD = '022' THEN C.AMT END),0) AS SUM_SGBBCD022  																						-- 카드 
			, NVL(SUM(CASE WHEN C.CLDT BETWEEN TO_CHAR(ADD_MONTHS(TO_DATE(P_YYMM,'YYYYMM'), -1) , 'YYYYMM') || '20' AND TO_CHAR(TO_DATE(P_YYMM,'YYYYMM') , 'YYYYMM') || '21' AND C.SGBBCD IN ('014','023','024','031','032','033','044') THEN C.AMT END),0) + NVL(SUM(CASE WHEN C.CLDT BETWEEN TO_CHAR(ADD_MONTHS(TO_DATE(P_YYMM,'YYYYMM'), -1) , 'YYYYMM') || '20' AND TO_CHAR(TO_DATE(P_YYMM,'YYYYMM') , 'YYYYMM') || '21' THEN C.LOSSAMT END),0) AS SUM_ETC2 															-- 기타 
			, NVL(SUM(CASE WHEN C.SGBBCD = '044' THEN C.BILLAMT END),0) AS SUM_MISU                                                                                                                 --미수총계
      		, NVL(SUM(CASE WHEN C.YYMM = TO_CHAR(ADD_MONTHS(TO_DATE(P_YYMM,'YYYYMM'), -1) , 'YYYYMM') AND C.CLDT BETWEEN TO_CHAR(ADD_MONTHS(TO_DATE(P_YYMM,'YYYYMM'), -1) , 'YYYYMM') || '20' AND TO_CHAR(TO_DATE(P_YYMM,'YYYYMM') , 'YYYYMM') || '21' AND C.SGBBCD IN ('031','032','033') THEN C.AMT END),0) + NVL(SUM(CASE WHEN C.YYMM = TO_CHAR(ADD_MONTHS(TO_DATE(P_YYMM,'YYYYMM'), -1) , 'YYYYMM') AND C.CLDT BETWEEN TO_CHAR(ADD_MONTHS(TO_DATE(P_YYMM,'YYYYMM'), -1) , 'YYYYMM') || '20' AND TO_CHAR(TO_DATE(P_YYMM,'YYYYMM') , 'YYYYMM') || '21' THEN C.LOSSAMT END),0) AS MON_SUM_ETC1		 --당월 재무,결손,휴독
			, NVL(SUM(CASE WHEN C.YYMM = TO_CHAR(ADD_MONTHS(TO_DATE(P_YYMM,'YYYYMM'), -1) , 'YYYYMM') AND C.SGBBCD = '044' THEN C.BILLAMT END),0) AS MON_SUM_MISU  																						--당월 미수총계
			, NVL(SUM(CASE WHEN C.YYMM = TO_CHAR(ADD_MONTHS(TO_DATE(P_YYMM,'YYYYMM'), -1) , 'YYYYMM') AND C.CLDT BETWEEN TO_CHAR(ADD_MONTHS(TO_DATE(P_YYMM,'YYYYMM'), -1) , 'YYYYMM') || '20' AND TO_CHAR(TO_DATE(P_YYMM,'YYYYMM') , 'YYYYMM') || '21' AND C.SGBBCD = '011' THEN C.AMT END),0) AS MON_SUM_SGBBCD011  															--당월 지로
			, NVL(SUM(CASE WHEN C.YYMM = TO_CHAR(ADD_MONTHS(TO_DATE(P_YYMM,'YYYYMM'), -1) , 'YYYYMM') AND C.CLDT BETWEEN TO_CHAR(ADD_MONTHS(TO_DATE(P_YYMM,'YYYYMM'), -1) , 'YYYYMM') || '20' AND TO_CHAR(TO_DATE(P_YYMM,'YYYYMM') , 'YYYYMM') || '21' AND C.SGBBCD = '012' THEN C.AMT END),0) AS MON_SUM_SGBBCD012  									  					    --당월 방문
			, NVL(SUM(CASE WHEN C.YYMM = TO_CHAR(ADD_MONTHS(TO_DATE(P_YYMM,'YYYYMM'), -1) , 'YYYYMM') AND C.CLDT BETWEEN TO_CHAR(ADD_MONTHS(TO_DATE(P_YYMM,'YYYYMM'), -1) , 'YYYYMM') || '20' AND TO_CHAR(TO_DATE(P_YYMM,'YYYYMM') , 'YYYYMM') || '21' AND C.SGBBCD = '013' THEN C.AMT END),0) AS MON_SUM_SGBBCD013  															-- 당월 통장입금
			, NVL(SUM(CASE WHEN C.YYMM = TO_CHAR(ADD_MONTHS(TO_DATE(P_YYMM,'YYYYMM'), -1) , 'YYYYMM') AND C.CLDT BETWEEN TO_CHAR(ADD_MONTHS(TO_DATE(P_YYMM,'YYYYMM'), -1) , 'YYYYMM') || '20' AND TO_CHAR(TO_DATE(P_YYMM,'YYYYMM') , 'YYYYMM') || '21' AND C.SGBBCD = '021' THEN C.AMT END),0) AS MON_SUM_SGBBCD021  															--당월 자동이체
			, NVL(SUM(CASE WHEN C.YYMM = TO_CHAR(ADD_MONTHS(TO_DATE(P_YYMM,'YYYYMM'), -1) , 'YYYYMM') AND C.CLDT BETWEEN TO_CHAR(ADD_MONTHS(TO_DATE(P_YYMM,'YYYYMM'), -1) , 'YYYYMM') || '20' AND TO_CHAR(TO_DATE(P_YYMM,'YYYYMM') , 'YYYYMM') || '21' AND C.SGBBCD = '022' THEN C.AMT END),0) AS MON_SUM_SGBBCD022  															-- 당월 카드
			, NVL(SUM(CASE WHEN C.YYMM = TO_CHAR(ADD_MONTHS(TO_DATE(P_YYMM,'YYYYMM'), -1) , 'YYYYMM') AND C.CLDT BETWEEN TO_CHAR(ADD_MONTHS(TO_DATE(P_YYMM,'YYYYMM'), -1) , 'YYYYMM') || '20' AND TO_CHAR(TO_DATE(P_YYMM,'YYYYMM') , 'YYYYMM') || '21' AND C.SGBBCD IN ('014','023','024','031','032','033','044') THEN C.AMT END),0) AS MON_SUM_ETC2 									--당월 기타
		FROM
			(
				SELECT
					A.GNO
					, A.NEWSCD
					, A.BOSEQ
					, A.READTYPECD
					, A.QTY
					, A.SGBGMM
					, A.SGTYPE
					, A.UPRICE
					, B.YYMM
					, B.SGBBCD
              		, B.SGYYMM
              		, (CASE WHEN A.SGTYPE='021' AND A.READTYPECD='013' AND B.SGGBCD='021' AND (SELECT TYPE FROM TM_AGENCY WHERE USERID=A.BOSEQ) = '101' THEN 0 WHEN A.SGTYPE='021' AND A.READTYPECD='013' AND B.SGGBCD='021' AND (SELECT TYPE FROM TM_AGENCY WHERE USERID=A.BOSEQ) IN ('102','201','202','203','301') THEN 4500 WHEN A.SGTYPE='023' AND A.READTYPECD='016' AND B.SGGBCD='023' THEN 2500*B.BILLQTY ELSE B.BILLAMT END) AS BILLAMT
          			, (CASE WHEN A.SGTYPE='021' AND A.READTYPECD='013' AND B.SGGBCD='021' AND (SELECT TYPE FROM TM_AGENCY WHERE USERID=A.BOSEQ) = '101' THEN 0 WHEN A.SGTYPE='021' AND A.READTYPECD='013' AND B.SGGBCD='021' AND (SELECT TYPE FROM TM_AGENCY WHERE USERID=A.BOSEQ) IN ('102','201','202','203','301') THEN 4500 WHEN A.SGTYPE='023' AND A.READTYPECD='016' AND B.SGGBCD='023' THEN 2500*B.BILLQTY ELSE B.AMT END) AS AMT
              		, B.LOSSAMT
              		, B.CLDT
				FROM
					TM_READER_NEWS A
					, TM_READER_SUGM B
			WHERE
				A.NEWSCD = B.NEWSCD
				AND
				A.SEQ = B.SEQ
				AND
				A.READNO = B.READNO
				AND
				A.BOSEQ = P_BOSEQ
				AND
				B.BOSEQ = P_BOSEQ
				AND
				A.BOSEQ = B.BOSEQ
				AND
				A.BOSEQ > 0
				AND
				B.BOSEQ > 0
				AND
				A.SEQ > 0
				AND
				B.SEQ > 0
				AND
				A.READNO > 0
				AND
				B.READNO > 0
				AND
				B.YYMM > 0
		        AND
		        A.GNO IS NOT NULL
			) C
		GROUP BY C.BOSEQ, C.NEWSCD, C.GNO
		ORDER BY  C.BOSEQ, C.NEWSCD, LENGTH(C.GNO),C.GNO;

	PRAGMA autonomous_transaction;
BEGIN
	RESULT_COUNT :=1;

	FOR STCUR IN STATISTICS(IV_BOSEQ, IV_YYMM) LOOP
    INSERT INTO TM_STAT_PERUSE
			(YYMM, BOSEQ, NEWSCD, GNO, READTYPECD011, READTYPECD012, READTYPECD013, READTYPECD014, READTYPECD015, READTYPECD016, READTYPECD021,
			READTYPECD022, SUM_QTY1, SUM_QTY2, SUM_QTY3, SUM_QTY4, SUM_QTY5, SUM_QTY6, SUM_QTY7, SUM_ETC_LOSS, SUM_ETC_FINANCE,
			SUM_ETC_LEAVE, SUM_LIST_PRICE, SUM_MISU_AMT, SUM_ALL_MISU_AMT, MONTH_SUGUM, SUM_YUGA_SINSU, SUM_YUGA_MISU, SUM_ETC1,
			SUM_DEPOSIT, SUM_SGBBCD011, SUM_SGBBCD012, SUM_SGBBCD013, SUM_SGBBCD021, SUM_SGBBCD022, SUM_ETC2, SUM_MISU,
      MON_SUM_ETC1, MON_SUM_MISU, MON_SUM_SGBBCD011, MON_SUM_SGBBCD012, MON_SUM_SGBBCD013, MON_SUM_SGBBCD021,
      MON_SUM_SGBBCD022, MON_SUM_ETC2)
		VALUES
			(TO_CHAR(ADD_MONTHS(TO_DATE(IV_YYMM,'YYYYMM'), -1) , 'YYYYMM') , STCUR.BOSEQ, STCUR.NEWSCD, STCUR.GNO, STCUR.READTYPECD011,
            STCUR.READTYPECD012, STCUR.READTYPECD013, STCUR.READTYPECD014, STCUR.READTYPECD015, STCUR.READTYPECD016, STCUR.READTYPECD021, STCUR.READTYPECD022,
            STCUR.SUM_QTY1, STCUR.SUM_QTY2, STCUR.SUM_QTY3, STCUR.SUM_QTY4, STCUR.SUM_QTY5, STCUR.SUM_QTY6, STCUR.SUM_QTY7, STCUR.SUM_ETC_LOSS,
            STCUR.SUM_ETC_FINANCE, STCUR.SUM_ETC_LEAVE, STCUR.SUM_LIST_PRICE, STCUR.SUM_MISU_AMT, STCUR.SUM_ALL_MISU_AMT, STCUR.MONTH_SUGUM,
            STCUR.SUM_YUGA_SINSU, STCUR.SUM_YUGA_MISU, STCUR.SUM_ETC1, STCUR.SUM_DEPOSIT, STCUR.SUM_SGBBCD011, STCUR.SUM_SGBBCD012, STCUR.SUM_SGBBCD013,
            STCUR.SUM_SGBBCD021, STCUR.SUM_SGBBCD022, STCUR.SUM_ETC2,  STCUR.SUM_MISU, STCUR.MON_SUM_ETC1, STCUR.MON_SUM_MISU, STCUR.MON_SUM_SGBBCD011,
            STCUR.MON_SUM_SGBBCD012, STCUR.MON_SUM_SGBBCD013, STCUR.MON_SUM_SGBBCD021, STCUR.MON_SUM_SGBBCD022, STCUR.MON_SUM_ETC2);

       RESULT_COUNT := RESULT_COUNT + 1;

	END LOOP;

	MSG := 'SUCCESS FUNC_STATISTICS_INSERT BOSEQ ='||IV_BOSEQ||' COUNT ='||(RESULT_COUNT-1);
    COMMIT;
	RETURN  MSG;


    EXCEPTION
    	WHEN INVALID_CURSOR THEN
        	MSG   :=   'FAIL FUNC_STATISTICS_INSERT BOSEQ ='||IV_BOSEQ||' INVALID_CURSOR_ERROR';
            ROLLBACK;
            RETURN MSG;
        WHEN   TOO_MANY_ROWS   THEN
        	MSG   :=   'FAIL FUNC_STATISTICS_INSERT BOSEQ ='||IV_BOSEQ||' TOO_MANY_ROWS_ERROR';
            ROLLBACK;
            RETURN MSG;
        WHEN DUP_VAL_ON_INDEX THEN
        	MSG   :=   'FAIL FUNC_STATISTICS_INSERT BOSEQ ='||IV_BOSEQ|| 'DUP_VAL_ON_INDEX_ERROR';
            ROLLBACK;
            RETURN MSG;
        WHEN OTHERS THEN
            MSG   :=   'FAIL FUNC_STATISTICS_INSERT BOSEQ ='||IV_BOSEQ||' OTHERS_ERROR';
            ROLLBACK;
            RETURN MSG;

END FUNC_STATISTICS_INSERT;

