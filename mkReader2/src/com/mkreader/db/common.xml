<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="common">
	
	<!-- 공통 코드 - 지국타입 목록 -->
	<select id="getAgencyTypeList" resultClass="java.util.HashMap">
		SELECT * 
		FROM 
			TC_COMMON
		WHERE
			USEYN = 'Y'
			AND 
			CDCLSF = '017'
		ORDER BY 
			SORTFD, CODE
	</select>
	
	<!-- 공통 코드 - 독자유형 목록 -->
	<select id="getReaderTypeList" resultClass="java.util.HashMap">
		SELECT 
			CODE
			,CNAME 
		FROM 
			TC_COMMON
		WHERE
			USEYN = 'Y'
			AND 
			CDCLSF = '115'
		ORDER BY 
			SORTFD, CODE
	</select>
	
	<!-- 공통 코드 - 확장유형 목록 -->
	<select id="getHjTypeList" resultClass="java.util.HashMap">
		SELECT 
			CODE
			,CNAME 
		FROM 
			TC_COMMON
		WHERE
			USEYN = 'Y'
			AND 
			CDCLSF = '013'
		ORDER BY 
			SORTFD, CODE
	</select>
	
	<!-- 공통 코드 - 수금방법 목록 -->
	<select id="getSugmTypeList" resultClass="java.util.HashMap">
		SELECT 
			CODE
			,CNAME
			,YNAME
		FROM 
			TC_COMMON
		WHERE 
			USEYN = 'Y'
			AND 
			CDCLSF = '119'
		ORDER BY 
			SORTFD, CODE
	</select>
	
	<!-- 공통 코드 - 수금방법 이름 -->	
	<select id="getSugmTypeName" resultClass="string">
		SELECT CNAME
		FROM TC_COMMON
		WHERE 
			USEYN = 'Y'
			AND 
			CDCLSF = '119'
			AND
			CODE = #CODE#
	</select>
	
	<!-- 공통 코드 - 코드값으로 조회 목록 -->
	<select id="getCommonCodeListByCdclsf" resultClass="java.util.HashMap">
		SELECT CODE
				, CNAME 
		 FROM TC_COMMON
		WHERE USEYN = 'Y'
		   AND CDCLSF = #CDCLSF#
		ORDER BY SORTFD, CODE
	</select>
	
	
	<!-- 지국 목록 -->
	<select id="getAgencyList" resultClass="java.util.HashMap">
		SELECT 
			A.*
	       , NVL2(TYPE, FUNC_COMMON_CDNM('017',A.TYPE),'') as TYPE_NM
		FROM 
			TM_AGENCY A
		ORDER BY
			NAME
	</select>
	
	<!-- 상담원 리스트 조회 -->
	<select id="getCounselorList" resultClass="java.util.HashMap">
		 SELECT ID
			     , NAME
			  FROM TMP_USER 
			 WHERE COMPCD='82102' 
			   AND USEYN='Y'
			   AND USERGB='2'
	</select>
	
	<!-- 지국 목록(구독테이블 기준) -->
	<select id="getAgencyList2" resultClass="java.util.HashMap">
		SELECT 
			BOSEQ
			, FUNC_AGENT_NM(BOSEQ) AS BONM
		FROM (
			SELECT DISTINCT BOSEQ
			FROM TM_READER_NEWS WHERE BOSEQ IS NOT NULL)
		ORDER BY BONM
	</select>
	
	
	<!-- 지국별 구역 목록 -->
	<select id="getAgencyAreaList" resultClass="java.util.HashMap">
		SELECT 
			BOSEQ,			<!-- 지국번호 -->
			GU_NO,		    <!-- 구역번호 -->
			GU_NM,		    <!-- 구역명 -->
			GU_APT,	  	    <!-- 아파트수 -->
			GU_BILLA,		<!-- 빌라수 -->
			GU_OFFICE,		<!-- 사무실수 -->
			GU_SANGA,		<!-- 상가수 -->
			GU_JUTEAK,		<!-- 주택수 -->
			GU_GITA		    <!-- 기타수 -->
		FROM 
			TM_GUYUK
		WHERE 
			BOSEQ = #BOSEQ#
		ORDER BY 
			BOSEQ, GU_NO
	</select>
	
	<!-- 지국별 매체목록 조회 -->
	<select id="getAgencyNewsList" resultClass="java.util.HashMap">
		SELECT 
			A.SERIAL		<!-- 지국번호 -->
			,A.NEWSCD		<!-- 매체코드 -->
			,B.CNAME		<!-- 매체명 -->
			,B.YNAME		<!-- 약자 -->
		FROM 
			(
				SELECT SERIAL, NEWSCD
				FROM TM_AGENCY_NEWS
				WHERE SERIAL = #SERIAL#
			) A
			,(
				SELECT CODE, CNAME, YNAME, SORTFD
				FROM TC_COMMON
				WHERE 
					USEYN = 'Y'
					AND CDCLSF = '100'
			) B
		WHERE 
			A.NEWSCD = B.CODE
		ORDER BY 
			B.SORTFD, B.CNAME
	</select>
	
	
	<!-- 마지막 수금년월 조회 -->
	<select id="getLastSGYYMM" resultClass="string">
		SELECT 
			SGYYMM
		FROM (
			SELECT 
				SEQ
				,SGYYMM
				,SDATE
				,EDATE
				,REGDATE
				,REGUSER
			FROM 
				TM_MONTHCLOSE_HIST
			ORDER BY
				SGYYMM DESC
		)
		WHERE
			ROWNUM = 1
	</select>
	
	<!-- 마지막 수금년월 조회2 -->
	<select id="getLastSGYYMM2" resultClass="java.util.HashMap">
		SELECT 
			SEQ
			,SGYYMM
			,TO_CHAR(ADD_MONTHS(TO_DATE(SGYYMM,'YYYYMM'), 1) , 'YYYYMM') NOWSGYYMM
			,SDATE
			,EDATE
			,REGDATE
			,REGUSER
		FROM (
			SELECT 
				SEQ
				,SGYYMM
				,TO_CHAR(ADD_MONTHS(TO_DATE(SGYYMM,'YYYYMM'), 1) , 'YYYYMM') NOWSGYYMM
				,SDATE
				,EDATE
				,REGDATE
				,REGUSER
			FROM 
				TM_MONTHCLOSE_HIST
			ORDER BY
				SGYYMM DESC
		)
		WHERE
			ROWNUM = 1
	</select>

	<!-- 새주소리스트 카운트 조회 -->
	<select id="searchNewAddrCount" resultClass="int">
		SELECT COUNT(1) COUNT
		  FROM TBL_ROAD_CD
		 WHERE 1=1
		   AND USE_YN = 'Y'
		<isEqual property="searchType" compareValue="1">
			   AND ROAD_NM LIKE #searchValue#||'%'
			<isNotEmpty property="bdNo1">
			   AND BD_NO1 = #bdNo1#
			</isNotEmpty>
			<isNotEmpty property="bdNo2">
			   AND BD_NO1 = #bdNo2#
			</isNotEmpty>
		</isEqual>
		<isEqual property="searchType" compareValue="2">
			<isNotEmpty property="addInfo">
			   AND (LW_EPMNDNG_NM LIKE #addInfo#||'%' OR ROAD_NM LIKE #addInfo#||'%')
			</isNotEmpty>
			   AND (SGG_BD_NM LIKE #searchValue#||'%' OR MN_DLV_NM LIKE #searchValue#||'%')
		</isEqual>
		<isEqual property="searchType" compareValue="3">
			   AND LW_EPMNDNG_NM LIKE #searchValue#||'%'
			<isNotEmpty property="lotNo1">
			   AND LOT_NO1 = #lotNo1#
			</isNotEmpty>
			<isNotEmpty property="lotNo2">
			   AND LOT_NO2 = #lotNo2#
			</isNotEmpty>
		</isEqual>
	</select>

	<!-- 새주소리스트 조회 -->
	<select id="searchNewAddr" resultClass="java.util.HashMap">
		SELECT D.* FROM(
			SELECT ROWNUM RNUM , C.* FROM(

		SELECT ZIP_CD,
			   LW_DNG_CD,
			   SUBSTR(LW_DNG_CD, 9, 2) EMD_GB,
		       CASE WHEN SUBSTR(LW_DNG_CD, 9, 2) = '00'
		       		THEN SD_NM||' '||SGG_NM||' '||ROAD_NM||' '||BD_NO1||DECODE(BD_NO2, 0, '', '-'||BD_NO2 )
		       		ELSE SD_NM||' '||SGG_NM||' '||LW_EPMNDNG_NM||''||ROAD_NM||' '||BD_NO1||DECODE(BD_NO2, 0, '', '-'||BD_NO2 )
		       END AS ROADNM,
			   NVL(SGG_BD_NM, MN_DLV_NM) SGG_BD_NM,
			   MN_DLV_NM,
			   CASE WHEN SUBSTR(LW_DNG_CD, 9, 2) = '00'
		       		THEN LW_EPMNDNG_NM||' '||LOT_NO1||DECODE(LOT_NO2, 0, '', '-'||LOT_NO2)
		       		ELSE LW_RI_NM||' '||LOT_NO1||DECODE(LOT_NO2, 0, '', '-'||LOT_NO2)
		       END AS ADDR,
		       BD_MNG_NO
		  FROM TBL_ROAD_CD
		 WHERE 1=1
		   AND USE_YN = 'Y'
		<isEqual property="searchType" compareValue="1">
			   AND ROAD_NM LIKE #searchValue#||'%'
			<isNotEmpty property="bdNo1">
			   AND BD_NO1 = #bdNo1#
			</isNotEmpty>
			<isNotEmpty property="bdNo2">
			   AND BD_NO2 = #bdNo2#
			</isNotEmpty>
		</isEqual>
		<isEqual property="searchType" compareValue="2">
			<isNotEmpty property="addInfo">
			   AND (LW_EPMNDNG_NM LIKE #addInfo#||'%' OR ROAD_NM LIKE #addInfo#||'%')
			</isNotEmpty>
			   AND (SGG_BD_NM LIKE #searchValue#||'%' OR MN_DLV_NM LIKE #searchValue#||'%')
		</isEqual>
		<isEqual property="searchType" compareValue="3">
			   AND LW_EPMNDNG_NM LIKE #searchValue#||'%'
			<isNotEmpty property="lotNo1">
			   AND LOT_NO1 = #lotNo1#
			</isNotEmpty>
			<isNotEmpty property="lotNo2">
			   AND LOT_NO2 = #lotNo2#
			</isNotEmpty>
		</isEqual>
			ORDER BY ZIP_CD, ZIP_SEQ
				)C
			)D
		WHERE
			RNUM &gt; ((#PAGE_NO# - 1) * #PAGE_SIZE#)
			AND	RNUM &lt;= (#PAGE_NO# * #PAGE_SIZE#)		   
				
	</select>

	<!-- 도로명주소 확인 -->
	<select id="countNewAddr" resultClass="int">
		SELECT COUNT(*)
		  FROM TBL_ROAD_CD
		 WHERE BD_MNG_NO = #BD_MNG_NO#
	</select> 

	<!-- 도로명주소 입력 -->
	<insert id="insertNewAddr">
		INSERT INTO TBL_ROAD_CD
			   (LW_DNG_CD, SD_NM, SGG_NM, LW_EPMNDNG_NM, LW_RI_NM,
				MT_YN, LOT_NO1, LOT_NO2, ROAD_CD, ROAD_NM,
	            UND_YN, BD_NO1, BD_NO2, BD_NM, BD_NM_DESC,
	            BD_MNG_NO, EPMNDNG_SEQ, ADM_DNG_CD, ADM_DNG_NM, ZIP_CD,
	            ZIP_SEQ, MN_DLV_NM, SGG_BD_NM, MV_REASON_CD,CHGDT,PRE_ROAD_CD,APT_YN, USE_YN, ZIP_NO)
	 	VALUES (#LW_DNG_CD#, #SD_NM#, #SGG_NM#, #LW_EPMNDNG_NM#, #LW_RI_NM#,
	            #MT_YN#, #LOT_NO1#, #LOT_NO2#, #ROAD_CD#, #ROAD_NM#,
	            #UND_YN#, #BD_NO1#, #BD_NO2#, #BD_NM#, #BD_NM_DESC#,
	            #BD_MNG_NO#, #EPMNDNG_SEQ#, #ADM_DNG_CD#, #ADM_DNG_NM#, #ZIP_CD#,
	            #ZIP_SEQ#, #MN_DLV_NM#, #SGG_BD_NM#, #MV_REASON_CD#,#CHGDT#,#PRE_ROAD_CD#,#APT_YN#, 'Y', #ZIP_NO#)
	</insert>

	<!-- 도로명주소 수정 -->
	<update id="updateNewAddr">
		UPDATE TBL_ROAD_CD
		   SET LW_DNG_CD = #LW_DNG_CD#,
		       SD_NM = #SD_NM#,
		       SGG_NM = #SGG_NM#,
		       LW_EPMNDNG_NM = #LW_EPMNDNG_NM#,
		       LW_RI_NM = #LW_RI_NM#,
			   MT_YN = #MT_YN#, 
			   LOT_NO1 = #LOT_NO1#, 
			   LOT_NO2 = #LOT_NO2#, 
			   ROAD_CD = #ROAD_CD#, 
			   ROAD_NM = #ROAD_NM#,
	           UND_YN = #UND_YN#,
	           BD_NO1 = #BD_NO1#, 
	           BD_NO2 = #BD_NO2#, 
	           BD_NM = #BD_NM#, 
	           BD_NM_DESC = #BD_NM_DESC#,
	           EPMNDNG_SEQ = #EPMNDNG_SEQ#, 
	           ADM_DNG_CD = #ADM_DNG_CD#, 
	           ADM_DNG_NM = #ADM_DNG_NM#, 
	           ZIP_CD = #ZIP_CD#,
	           ZIP_SEQ = #ZIP_SEQ#, 
	           MN_DLV_NM = #MN_DLV_NM#, 
	           SGG_BD_NM = #SGG_BD_NM#, 
	           MV_REASON_CD = #MV_REASON_CD#,
	           CHGDT = #CHGDT#,
	           PRE_ROAD_CD = #PRE_ROAD_CD#,
	           APT_YN = #APT_YN#,
	           ZIP_NO = #ZIP_NO#
	     WHERE BD_MNG_NO = #BD_MNG_NO#
	</update>

	<!-- 도로명주소 폐지 -->
	<update id="deleteNewAddr">
		UPDATE TBL_ROAD_CD
		   SET MV_REASON_CD = #MV_REASON_CD#,
	           USE_YN = 'N'
	     WHERE BD_MNG_NO = #BD_MNG_NO#
	</update>
	
	<!-- 메뉴 조회 -->
	<select id="selectMenuList" resultClass="java.util.HashMap">
		   SELECT MENU_ID
		           , MENU_DEPTH
		           , PARENT_MENU_ID 
		           , MENU_NAME 
		           , MENU_URL
		           , LTRIM(SYS_CONNECT_BY_PATH(menu_name,'>'),'>') AS depth_fullname
		           , (SELECT MENU_ID FROM TM_MENU WHERE MENU_ORDER = '1' AND PARENT_MENU_ID = A.MENU_ID) AS SUB_MENU_ID
		           , TRIM(POPUP_YN) AS POPUP_YN
			FROM TM_MENU A
		   WHERE COMPCD = #compCd#    
		      AND USE_YN = 'Y'
			START WITH parent_menu_id='0' CONNECT BY PRIOR menu_id=parent_menu_id
		   ORDER BY menu_depth,parent_menu_id,menu_order ASC
	</select>
	
	
	<!-- 도로명주소 지국변경 -->
	<update id="updateJikukCode">
		  UPDATE TBL_ROAD_CD
			   SET BOSEQ = #newBoseq#,BUNKUKCD=#newSubSeq#
		   WHERE LW_DNG_CD		= #lwDngCd# 
			  AND BD_MNG_NO	= #bdMngNo#
			  AND BOSEQ			= #oldBoseq#
	</update>

</sqlMap>